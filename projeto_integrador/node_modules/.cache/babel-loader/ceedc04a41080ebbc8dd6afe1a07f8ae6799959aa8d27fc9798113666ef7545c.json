{"ast":null,"code":"var _jsxFileName = \"/home/kairon/easySales/projeto_integrador/src/pages/LoginPage/index.js\",\n  _s = $RefreshSig$();\n/* // LoginPage.js\n\nimport React, { useState } from 'react';\n\nfunction LoginPage() {\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleInputChange = (e) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Realizar a lógica de autenticação aqui (chamada à API, validação, etc.)\n    // Redirecionar o usuário para a página desejada se a autenticação for bem-sucedida\n    // Exibir mensagem de erro em caso de falha na autenticação\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={credentials.email}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label>Senha:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={credentials.password}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">Entrar</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n */\n\n/* import React, { useState } from 'react';\n\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    // Aqui você pode adicionar a lógica de autenticação com o email e senha\n    // Pode ser uma chamada à API ou qualquer outra forma de autenticação\n\n    console.log('Email:', email);\n    console.log('Password:', password);\n\n    // Redirecionar para a página principal após o login bem-sucedido\n    // Pode ser feito usando o hook useHistory do react-router-dom\n    // history.push('/pagina-principal');\n  };\n\n  const handleSignUp = () => {\n    // Aqui você pode redirecionar para a página de cadastro\n    // Pode ser feito usando o hook useHistory do react-router-dom\n    // history.push('/cadastro');\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Email:</label>\n          <input type=\"email\" value={email} onChange={handleEmailChange} />\n        </div>\n        <div>\n          <label>Senha:</label>\n          <input type=\"password\" value={password} onChange={handlePasswordChange} />\n        </div>\n        <button type=\"submit\">Entrar</button>\n      </form>\n      <button onClick={handleSignUp}>Cadastrar</button>\n    </div>\n  );\n}\n\nexport default LoginPage;\n */\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './login.css';\nimport logo from \"../Img/Eassy.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Fazer a requisição à API para autenticar o email e a senha\n    // Exemplo fictício de requisição usando fetch:\n    fetch('sua-api.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      // Verificar se a autenticação foi bem-sucedida\n      if (data.authenticated) {\n        // Redirecionar para a página inicial após o login bem-sucedido\n        navigate('/');\n      } else {\n        console.log('Email ou senha incorretos');\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleSignUp = () => {\n    // Redirecionar para a página de cadastro\n    navigate('/cadastroEmpresa');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cadastro\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: handleEmailChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: handlePasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSignUp,\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\n\n/* import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [companyId, setCompanyId] = useState(null); // Estado para armazenar o id da empresa\n  const navigate = useNavigate();\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    // Fazer a requisição à API para autenticar o email e a senha\n    // Exemplo fictício de requisição usando fetch:\n    fetch('sua-api.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, password })\n    })\n      .then(response => response.json())\n      .then(data => {\n        // Verificar se a autenticação foi bem-sucedida\n        if (data.authenticated) {\n          setCompanyId(data.companyId); // Armazenar o id da empresa retornado pela API\n          // Redirecionar para a página inicial da empresa após o login bem-sucedido\n          navigate(`/${data.companyId}`);\n        } else {\n          console.log('Email ou senha incorretos');\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const handleSignUp = () => {\n    // Redirecionar para a página de cadastro\n    navigate('/cadastroEmpresa');\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Email:</label>\n          <input type=\"email\" value={email} onChange={handleEmailChange} />\n        </div>\n        <div>\n          <label>Senha:</label>\n          <input type=\"password\" value={password} onChange={handlePasswordChange} />\n        </div>\n        <button type=\"submit\">Entrar</button>\n      </form>\n      <button onClick={handleSignUp}>Cadastrar</button>\n    </div>\n  );\n}\n\nexport default LoginPage;\n */\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","logo","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","navigate","handleEmailChange","e","target","value","handlePasswordChange","handleLogin","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","authenticated","console","log","catch","error","handleSignUp","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/kairon/easySales/projeto_integrador/src/pages/LoginPage/index.js"],"sourcesContent":["/* // LoginPage.js\n\nimport React, { useState } from 'react';\n\nfunction LoginPage() {\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleInputChange = (e) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Realizar a lógica de autenticação aqui (chamada à API, validação, etc.)\n    // Redirecionar o usuário para a página desejada se a autenticação for bem-sucedida\n    // Exibir mensagem de erro em caso de falha na autenticação\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={credentials.email}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label>Senha:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={credentials.password}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">Entrar</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n */\n\n/* import React, { useState } from 'react';\n\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    // Aqui você pode adicionar a lógica de autenticação com o email e senha\n    // Pode ser uma chamada à API ou qualquer outra forma de autenticação\n\n    console.log('Email:', email);\n    console.log('Password:', password);\n\n    // Redirecionar para a página principal após o login bem-sucedido\n    // Pode ser feito usando o hook useHistory do react-router-dom\n    // history.push('/pagina-principal');\n  };\n\n  const handleSignUp = () => {\n    // Aqui você pode redirecionar para a página de cadastro\n    // Pode ser feito usando o hook useHistory do react-router-dom\n    // history.push('/cadastro');\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Email:</label>\n          <input type=\"email\" value={email} onChange={handleEmailChange} />\n        </div>\n        <div>\n          <label>Senha:</label>\n          <input type=\"password\" value={password} onChange={handlePasswordChange} />\n        </div>\n        <button type=\"submit\">Entrar</button>\n      </form>\n      <button onClick={handleSignUp}>Cadastrar</button>\n    </div>\n  );\n}\n\nexport default LoginPage;\n */\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './login.css';\nimport logo from \"../Img/Eassy.png\"\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    // Fazer a requisição à API para autenticar o email e a senha\n    // Exemplo fictício de requisição usando fetch:\n    fetch('sua-api.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, password })\n    })\n      .then(response => response.json())\n      .then(data => {\n        // Verificar se a autenticação foi bem-sucedida\n        if (data.authenticated) {\n          // Redirecionar para a página inicial após o login bem-sucedido\n          navigate('/');\n        } else {\n          console.log('Email ou senha incorretos');\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const handleSignUp = () => {\n    // Redirecionar para a página de cadastro\n    navigate('/cadastroEmpresa');\n  };\n\n  return (\n    <div className=\"container\">\n      <img src={logo}></img>\n      <div className=\"cadastro\">\n        <h2>Login</h2>\n        <form onSubmit={handleLogin}>\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input type=\"email\" value={email} onChange={handleEmailChange} />\n          </div>\n          <div className=\"form-group\">\n            <label>Senha:</label>\n            <input type=\"password\" value={password} onChange={handlePasswordChange} />\n          </div>\n          <div className=\"button-container\">\n            <button type=\"submit\">Entrar</button>\n          </div>\n        </form>\n        <div className=\"button-container\">\n          <button onClick={handleSignUp}>Cadastrar</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n\n\n\n\n\n/* import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [companyId, setCompanyId] = useState(null); // Estado para armazenar o id da empresa\n  const navigate = useNavigate();\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    // Fazer a requisição à API para autenticar o email e a senha\n    // Exemplo fictício de requisição usando fetch:\n    fetch('sua-api.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, password })\n    })\n      .then(response => response.json())\n      .then(data => {\n        // Verificar se a autenticação foi bem-sucedida\n        if (data.authenticated) {\n          setCompanyId(data.companyId); // Armazenar o id da empresa retornado pela API\n          // Redirecionar para a página inicial da empresa após o login bem-sucedido\n          navigate(`/${data.companyId}`);\n        } else {\n          console.log('Email ou senha incorretos');\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const handleSignUp = () => {\n    // Redirecionar para a página de cadastro\n    navigate('/cadastroEmpresa');\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Email:</label>\n          <input type=\"email\" value={email} onChange={handleEmailChange} />\n        </div>\n        <div>\n          <label>Senha:</label>\n          <input type=\"password\" value={password} onChange={handlePasswordChange} />\n        </div>\n        <button type=\"submit\">Entrar</button>\n      </form>\n      <button onClick={handleSignUp}>Cadastrar</button>\n    </div>\n  );\n}\n\nexport default LoginPage;\n */\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}